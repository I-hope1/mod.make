
bundles = 语言
bundle.bundle = 英语
bundle.bundle_be = 比利时文
bundle.bundle_cs = 捷克文
bundle.bundle_da = 丹麦文
bundle.bundle_de = 德文
bundle.bundle_es = 西班牙文
bundle.bundle_et = 爱沙尼亚文
bundle.bundle_eu = 巴斯克文
bundle.bundle_fi = 芬兰文
bundle.bundle_fil = 未知
bundle.bundle_fr = 法文
bundle.bundle_fr_BE = 法文BE
bundle.bundle_hu = 匈牙利文
bundle.bundle_in_ID = 印度尼西亚文
bundle.bundle_it = 意大利文
bundle.bundle_ja = 日文
bundle.bundle_ko = 韩文
bundle.bundle_lt = 立陶宛语
bundle.bundle_nl = 荷兰语
bundle.bundle_nl_BE = 荷兰语BE
bundle.bundle_pl = 波兰语
bundle.bundle_pt_BR = 葡萄牙语BR
bundle.bundle_pt_PT = 葡萄牙语PT
bundle.bundle_ro = 罗马尼亚
bundle.bundle_ru = 俄文
bundle.bundle_sv = 瑞典语
bundle.bundle_th = 泰语
bundle.bundle_tk = 土耳其语
bundle.bundle_tr = 土耳其语
bundle.bundle_uk_UA = 乌克兰语
bundle.bundle_zh_CN = 中文(简体)
bundle.bundle_zh_TW = 中文(繁体)

while = 循环
default = 默认
select = 选择
unit_spawn = 单位生成
not_show_again = 不再显示

team = 队伍
test = 调试
Error = 错误
SyntaxError = 语法错误
EvalError = Eval错误
RangeError = 数值超出范围
ReferenceError = 引用错误
TypeError = 类型错误
InternalError = 内部错误
JavaException = Java异常
hitoricalRecord = 历史记录

RHINO-USAGE-WARNING~Missed-Context.javaToJS()-conversion~Rhino-runtime-detected-object-of-class-where-it-expected-String,-Number,-Boolean-or-Scriptable-instance.-Please-check-your-code-for-missing-Context.javaToJS()-call. = Rhino用法警告~缺少Context.javaToJS()转换~RHINO运行时检测到类“{1}”的对象“{0}”，它需要字符串、数字、布尔值或可脚本化的实例。请检查您的代码是否缺少Context.javaToJS()调用。
Duplicate-parameter-name-. = 重复的参数名“{0}”。
Program-too-complex~too-big-jump-offset. = 程序太复杂~跳转偏移量太大。
Program-too-complex~internal-index-exceeds-64K-limit. = 程序太复杂~内部索引超过64K限制。
Encountered-code-generation-error-while-compiling-function-~ = 编译函数“{0}”时遇到代码生成错误~{1}
Encountered-code-generation-error-while-compiling-script~ = 编译脚本时遇到代码生成错误~{0}
Constructor-for-not-found. = 未找到“{0}”的构造函数。
-is-not-a-constructor. = “{0}”不是构造函数。
Method-or-constructor-must-be-static-with-the-signature-"(Context-cx,-Object[]-args,-Function-ctorObj,-boolean-inNewExpr)"-to-define-a-variable-arguments-constructor. = 方法或构造函数“{0}”必须是静态的，带有签名(上下文cx、对象[]参数、函数目录对象、布尔inNewExpr)，才能定义变量参数构造函数。
Method-must-be-static-with-the-signature-"(Context-cx,-Scriptable-thisObj,-Object[]-args,-Function-funObj)"-to-define-a-variable-arguments-function. = 方法“{0}”必须是带有签名的静态方法(上下文cx、可脚本化的thisObj、对象[]参数、函数funObj)，才能定义变量参数函数。
Method-called-on-incompatible-object. = 对不兼容的对象调用了方法“{0}”。
Unsupported-parameter-type-in-method-. = 方法“{1}”中不支持的参数类型“{0}”。
Unsupported-return-type-in-method-. = 方法“{1}”中不支持的返回类型“{0}”。
Construction-of-objects-of-type-is-not-supported. = 不支持构造“{0}”类型的对象。
Method-occurs-multiple-times-in-class-. = 方法“{0}”在类“{1}”中出现多次。
Method-not-found-in-. = 在“{1}”中找不到方法“{0}”。
Invalid-left-hand-side-of-for..in-loop. = for的左侧无效..循环。
Only-one-variable-allowed-in-for..in-loop. = 的中只允许一个变量..循环。
Left-hand-side-of-for..in-loop-must-be-an-array-of-length-2-to-accept-key/value-pair. = 森林的左手边..in loop必须是长度为2的数组，才能接受键/值对。
Can''t-convert-to-type-. = 无法转换为类型“{0}”。
Invalid-assignment-left-hand-side. = 左侧分配无效。
Invalid-decrement-operand. = 无效的减量操作数。
Invalid-increment-operand. = 无效的增量操作数。
yield-must-be-in-a-function. = yield必须在函数中。
yield-expression-must-be-parenthesized. = yield表达式必须用圆括号括起来。
Function-must-be-called-directly,-and-not-by-way-of-a-function-of-another-name. = 函数“{0}”必须直接调用，而不是通过另一个名称的函数。
Calling-eval()-with-anything-other-than-a-primitive-string-value-will-simply-return-the-value.-Is-this-what-you-intended? = 用除原始字符串值之外的任何东西调用eval()都将简单地返回值。这是你想要的吗？
Calling-eval()-with-anything-other-than-a-primitive-string-value-is-not-allowed-in-strict-mode. = 在严格模式下，不允许使用原始字符串值以外的任何值调用eval()。
Invalid-destructuring-assignment-operator = 无效的析构赋值运算符
-may-only-be-invoked-from-a-"new"-expression. = “{0}”只能从“new”表达式中调用。
The-constructor-is-deprecated. = “{0}”构造函数已被否决。
no-source-found-to-decompile-function-reference- = 找不到反编译函数引用{0}的源
second-argument-to-Function.prototype.apply-must-be-an-array = Function.prototype.apply的第二个参数必须是数组
invalid-string-escape-mask = 无效的字符串转义掩码
error-instantiating-()~class-is-interface-or-abstract = 实例化({0})时出错~类{1}是接口或抽象的
Found-constructor-with-wrong-signature~-calling-with-signature- = 发现具有错误签名的构造函数~{0}调用了具有签名{2}的{1}
Expected-argument-to-getClass()-to-be-a-Java-object. = getClass()的参数应为Java对象。
Java-constructor-for-with-arguments-not-found. = 找不到参数为“{1}”的“{0}”的Java构造函数。
The-choice-of-Java-method-.-matching-JavaScript-argument-types-()-is-ambiguous;-candidate-methods-are~ = Java方法{0}的选择。{1}匹配的JavaScript参数类型({2})不明确；候选方法有~{3}
The-choice-of-Java-constructor-matching-JavaScript-argument-types-()-is-ambiguous;-candidate-constructors-are~ = 匹配JavaScript参数类型({1})的Java构造函数{0}的选择不明确；候选构造函数是~{2}
Cannot-convert-to- = 无法将{0}转换为{1}
Cannot-convert-function-to-interface-with-no-methods = 没有方法，无法将函数转换为接口{0}
Cannot-convert-function-to-interface-since-it-contains-methods-with-different-names = 无法将函数转换为接口{0}，因为它包含不同名称的方法
Property-is-not-defined-in-interface-adapter = 接口适配器中未定义属性“{0}”
Property-is-not-a-function-in-interface-adapter = 属性“{0}”不是接口适配器中的函数
Constructor-for-"Packages"-expects-argument-of-type-java.lang.Classloader = “Packages”的构造函数需要java.lang.Classloader类型的参数
Invalid-quantifier- = 量词{0}无效
Overly-large-back-reference- = 过大的反向引用{0}
Overly-large-minimum- = 最小值{0}过大
Overly-large-maximum- = 最大值{0}过大
Zero-quantifier- = 零量词{0}
Maximum-less-than-minimum = 最大值比最小值小{0}
Unterminated-quantifier- = 未终止的量词{0}
Unterminated-parenthetical- = 未终止的括号{0}
Unterminated-character-class- = 未终止的字符类{0}
Invalid-range-in-character-class. = 字符类中的范围无效。
Trailing-\-in-regular-expression. = 正则表达式中的尾随字符。
unmatched-)-in-regular-expression. = 不匹配)。
Regular-expressions-are-not-available. = 正则表达式不可用。
back-reference-exceeds-number-of-capturing-parentheses. = 反向引用超过了捕获括号的数量。
Only-one-argument-may-be-specified-if-the-first-argument-to-RegExp.prototype.compile-is-a-RegExp-object. = 如果RegExp.prototype.compile的第一个参数是RegExp对象，则只能指定一个参数。
Expected-argument-of-type-object,-but-instead-had-type- = 应为类型对象的参数，但类型为{0}
Date-is-invalid. = 日期无效。
toISOString-must-return-a-primitive-value,-but-instead-returned- = toISOString必须返回一个基元值，但返回了“{0}”
Compilation-produced-syntax-errors. = 编译产生{0}个语法错误。
TypeError~redeclaration-of-var-. = type ERROR~var { 0 }的重新声明。
TypeError~redeclaration-of-const-. = type ERROR~const { 0 }的重新声明。
TypeError~redeclaration-of-variable-. = TypeError~变量{0}的重新声明。
TypeError~redeclaration-of-formal-parameter-. = TypeError~形式参数{0}的重新声明。
TypeError~redeclaration-of-function-. = TypeError~函数{0}的重新声明。
SyntaxError~let-declaration-not-directly-within-block = 语法错误~让声明不直接在块中
SyntaxError~invalid-object-initializer = 语法错误~无效的对象初始值设定项
duplicated-label = 重复标签
undefined-label = 未定义的标签
unlabelled-break-must-be-inside-loop-or-switch = 未标记的断点必须在回路或开关内部
continue-must-be-inside-loop = continue必须在循环内部
continue-can-only-use-labeles-of-iteration-statements = continue只能使用迭代语句标签
Line-terminator-is-not-allowed-between-the-throw-keyword-and-throw-expression. = throw关键字和throw表达式之间不允许有行结束符。
missing-(-before-function-parameters. = 缺少(在函数参数之前。
missing-formal-parameter = 缺少形式参数
missing-)-after-formal-parameters = 缺少)在形式参数之后
missing-'{'-before-function-body = 函数体前缺少“{0}”
missing-}-after-function-body = 函数体后缺少}
missing-(-before-condition = 缺少(条件前
missing-)-after-condition = 缺失)后条件
missing-;-before-statement = 失踪；语句前
missing-;-after-statement = 失踪；语句后
missing-name-after-.-operator = 后面缺少名称。操作员
missing-name-after-~~operator = *运算符后缺少名称
missing-name-after-..-operator = 后面缺少名称..操作员
missing-name-after-.@ = 后面缺少名称。@
missing-]-in-index-expression = 索引表达式中缺少]
missing-(-before-switch-expression = 缺少(在开关表达式之前
missing-)-after-switch-expression = 开关表达式后缺少)
missing-'{'-before-switch-body = 开关主体前缺少' '
invalid-switch-statement = 无效的开关语句
missing-~after-case-expression = 缺少~在大小写表达式之后
double-default-label-in-the-switch-statement = switch语句中的双默认标签
missing-while-after-do-loop-body = 在do-loop正文之后时丢失
missing-(-after-for = 缺少(在for之后
missing-;-after-for-loop-initializer = 失踪；for循环初始值设定项之后
missing-;-after-for-loop-condition = 失踪；强制循环条件后
missing-in-after-for = 在...之后失踪
missing-)-after-for-loop-control = for循环控制后缺失)
missing-(-before-with-statement-object = 缺少with-语句对象
missing-)-after-with-statement-object = with-statement对象后缺少)
with-statements-not-allowed-in-strict-mode = 严格模式下不允许使用语句
missing-(-after-let = 缺少(字母后
missing-)-after-variable-list = 变量列表后缺少)
missing-}-after-let-statement = let语句后缺少}
invalid-return = 无效返回
missing-}-in-compound-statement = 复合语句中缺少}
invalid-label = 无效标签
missing-variable-name = 缺少变量名
invalid-variable-initialization = 无效的变量初始化
missing-~in-conditional-expression = 缺少~在条件表达式中
missing-)-after-argument-list = 参数列表后缺少)
missing-]-after-element-list = 元素列表后缺少]
invalid-property-id = 无效的属性id
missing-~after-property-id = 缺少~在属性id之后
missing-}-after-property-list = 属性列表后缺少}
missing-)-in-parenthetical = 括号中缺少)
identifier-is-a-reserved-word~ = 标识符是保留字~{0}
missing-(-before-catch-block-condition = 缺失(在catch-block条件之前
invalid-catch-block-condition = 无效的catch块条件
any-catch-clauses-following-an-unqualified-catch-are-unreachable = 非限定catch之后的任何catch子句都是不可达的
missing-'{'-before-try-block = try块前缺少“{ 0 }”
missing-'{'-before-catch-block-body = catch-block正文前缺少“{ 0 }”
''try''-without-''catch''-or-''finally'' = 没有“catch”或“finally”的“try”
function-does-not-always-return-a-value = 函数{0}并不总是返回值
anonymous-function-does-not-always-return-a-value = 匿名函数并不总是返回值
return-statement-is-inconsistent-with-previous-usage = return语句与以前的用法不一致
TypeError~generator-function-returns-a-value = 类型错误~生成器函数{0}返回值
TypeError~anonymous-generator-function-returns-a-value = 类型错误~匿名生成器函数返回值
syntax-error = 句法误差
Unexpected-end-of-file = 文件意外结束
illegally-formed-XML-syntax = 非法形成的XML语法
XML-runtime-not-available = XML运行时不可用
Too-deep-recursion-while-parsing = 解析时递归太深
Too-many-constructor-arguments = 构造函数参数太多
Too-many-function-arguments = 函数参数太多
Code-has-no-side-effects = 代码没有副作用
Extraneous-trailing-semicolon = 无关的尾随分号
Trailing-comma-is-not-legal-in-an-ECMA-262-object-initializer = 在ECMA-262对象初始值设定项中，尾随逗号是不合法的
Trailing-comma-in-array-literal-has-different-cross-browser-behavior = 数组文本中的尾随逗号具有不同的跨浏览器行为
Test-for-equality-(==)-mistyped-as-assignment-(=)? = 测试等式(==)是否被错误地键入为赋值(=)？
Variable-hides-argument = 变量{0}隐藏参数
Missing-=-in-destructuring-declaration = 在析构声明中缺少=
Default-values-in-destructuring-declarations-are-not-supported = 不支持析构声明中的默认值
Old-octal-numbers-prohibited-in-strict-mode. = 严格模式下禁止旧的八进制数。
Property-already-defined-in-this-object-literal. = 属性“{0}”已在此对象文本中定义。
Parameter-already-declared-in-this-function. = 此函数中已经声明了参数“{0}”。
-is-not-a-valid-identifier-for-this-use-in-strict-mode. = “{0}”不是在严格模式下使用的有效标识符。
This-operation-is-not-allowed. = 不允许此操作。
-has-no-properties. = {0}没有属性。
Invalid-iterator-value = 迭代器值无效
__iterator__-returned-a-primitive-value = __迭代器_ _返回了一个原始值
-is-not-iterable = {0}不可迭代
invalid-for-each-loop = 对每个循环无效
Assignment-to-undeclared-variable- = 未声明的变量{0}的赋值
Reference-to-undefined-property- = 对未定义属性“{0}”的引用
Property-not-found. = 找不到属性{0}。
Cannot-set-property-that-has-only-a-getter-to-value-''''. = 无法将只有getter的属性{0}设置为值“{1}”。
Invalid-JavaScript-value-of-type- = {0}类型的JavaScript值无效
Primitive-type-expected-(had-instead) = 应为基元类型(改为{0})
Namespace-object-expected-to-left-of-~~(found-instead) = 命名空间对象应位于~~(改为找到{0})
Cannot-convert-null-to-an-object. = 无法将null转换为对象。
Cannot-convert-undefined-to-an-object. = 无法将未定义的转换为对象。
Cyclic-value-not-allowed. = 不允许循环{0}值。
-is-not-defined. = “{0}”未定义。
Cannot-read-property-from- = 无法从{0}读取属性“{1}”
Cannot-set-property-of-to- = 无法将{0}的属性“{1}”设置为“{2}”
Cannot-delete-property-of- = 无法删除{0}的属性“{1}”
Cannot-call-method-of- = 无法调用{0}的方法“{1}”
Cannot-apply-"with"-to- = 无法将“with”应用于{0}
-is-not-a-function,-it-is-. = {0}不是函数，而是{1}。
Cannot-call-property-in-object-.-It-is-not-a-function,-it-is-. = 无法调用对象{1}中的属性{0}。它不是函数，而是“{2}”。
Cannot-find-function-. = 找不到函数{0}。
Cannot-find-function-in-object-. = 在对象{1}中找不到函数{0}。
-is-not-an-xml-object. = {0}不是xml对象。
-is-not-a-reference-to-read-reference-value. = {0}不是读取引用值的引用。
-is-not-a-reference-to-set-reference-value-to-. = {0}不是将引用值设置为{1}的引用。
Function-can-not-be-used-as-the-left-hand-side-of-assignment-or-as-an-operand-of-++-or--operator. = 函数{0}不能用作赋值的左侧或++或-运算符的操作数。
Object''s-getDefaultValue()-method-returned-an-object. = 对象的getDefaultValue()方法返回了一个对象。
Can''t-use-''instanceof''-on-a-non-object. = 不能在非对象上使用“”instanceof“”。
''prototype''-property-of-is-not-an-object. = {0}的“prototype”属性不是对象。
Can''t-use-''in''-on-a-non-object. = 不能在非对象上使用“”中的“”。
illegal-radix-. = 非法的基数{0}。
Cannot-find-default-value-for-object. = 找不到对象的默认值。
Cannot-load-class-which-has-no-zero-parameter-constructor. = 无法加载没有零参数构造函数的类“{0}”。
duplicate.defineClass.name-=-Invalid-method-~name-is-already-in-use. = duplicate.defineClass.name =无效方法“{0}”~名称“{1}”已在使用中。
Can''t-define-constructor-or-class-since-more-than-one-constructor-has-multiple-parameters. = 无法定义构造函数或类{0}，因为多个构造函数有多个参数。
-must-extend-ScriptableObject-in-order-to-define-property-. = {0}必须扩展ScriptableObject才能定义属性{1}。
In-order-to-define-a-property,-getter-must-have-zero-parameters-or-a-single-ScriptableObject-parameter. = 为了定义属性，getter {0}必须具有零个参数或一个ScriptableObject参数。
Expected-static-or-delegated-getter-to-take-a-ScriptableObject-parameter. = 要求静态或委托的getter {0}接受ScriptableObject参数。
Getter-and-setter-must-both-be-static-or-neither-be-static. = Getter和setter必须都是静态的，或者都不是静态的。
Setter-must-have-void-return-type~ = Setter必须具有void返回类型~{0}
Two-parameter-setter-must-take-a-ScriptableObject-as-its-first-parameter. = 双参数设置器必须将ScriptableObject作为其第一个参数。
Expected-single-parameter-setter-for- = {0}需要单个参数设置器
Expected-static-or-delegated-setter-to-take-two-parameters. = 期望静态或委托设置器{0}采用两个参数。
Expected-either-one-or-two-parameters-for-setter. = setter需要一个或两个参数。
Unsupported-parameter-type-in-setter-. = setter“{ 1 }”中不支持的参数类型“{0}”。
Cannot-add-a-property-to-a-sealed-object~. = 无法向密封对象添加属性~{0}。
Cannot-remove-a-property-from-a-sealed-object~. = 无法从密封对象中移除属性~{0}。
Cannot-modify-a-property-of-a-sealed-object~. = 无法修改密封对象的属性~{0}。
Cannot-modify-readonly-property~. = 无法修改只读属性~{0}。
Cannot-be-both-a-data-and-an-accessor-descriptor. = 不能既是数据又是访问器描述符。
Cannot-change-the-configurable-attribute-of-from-false-to-true. = 无法将“{0}”的可配置属性从false更改为true。
Cannot-change-the-enumerable-attribute-of-because-configurable-is-false. = 无法更改“{0}”的可枚举属性，因为可配置为false。
Cannot-change-the-writable-attribute-of-from-false-to-true-because-configurable-is-false. = 无法将“{0}”的可写属性从false更改为true，因为可配置为false。
Cannot-change-the-value-of-attribute-because-writable-is-false. = 无法更改属性“{0}”的值，因为可写为false。
Cannot-change-the-get-attribute-of-because-configurable-is-false. = 无法更改“{0}”的get属性，因为可配置为false。
Cannot-change-the-set-attribute-of-because-configurable-is-false. = 无法更改“{0}”的set属性，因为可配置为false。
Cannot-change-from-a-data-property-to-an-accessor-property-because-configurable-is-false. = 无法将“{0}”从数据属性更改为访问器属性，因为可配置为false。
Cannot-change-from-an-accessor-property-to-a-data-property-because-configurable-is-false. = 无法将“{0}”从访问器属性更改为数据属性，因为可配置为false。
Cannot-add-properties-to-this-object-because-extensible-is-false. = 无法向该对象添加属性，因为可扩展为false。
Cannot-delete-property-because-configurable-is-false. = 无法删除“{0}”属性，因为可配置为false。
missing-exponent = 缺失指数
number-format-error = 数字格式错误
unterminated-string-literal = 未终止的字符串文字
unterminated-comment = 未终止的注释
unterminated-regular-expression-literal = 未终止的正则表达式文本
invalid-flag-after-regular-expression = 正则表达式后的无效标志
no-input-for- = {0}没有输入
illegal-character~ = 非法字符~{0}
invalid-Unicode-escape-sequence = 无效的Unicode转义序列
not-a-valid-default-namespace-statement.-Syntax-is~default-xml-namespace-=-EXPRESSION; = 不是有效的默认命名空间语句。语法为~default XML namespace = EXPRESSion；
illegal-octal-literal-digit-;-interpreting-it-as-a-decimal-digit = 非法的八进制文字数字{ 0 }；将其解释为十进制数字
illegal-usage-of-future-reserved-keyword-;-interpreting-it-as-ordinary-identifier = 非法使用未来保留关键字{ 0 }；将其解释为普通标识符
Internal-error~type-conversion-of-to-assign-to-on-failed. = 内部错误~要分配给{2}上{1}的{0}的类型转换失败。
Can''t-find-converter-method-on-class-. = 在类{1}上找不到转换器方法“{0}”。
Java-method-cannot-be-assigned-to. = 无法将Java方法“{0}”分配给。
Internal-error~attempt-to-access-private/protected-field-. = 内部错误~试图访问私有/受保护字段“{0}”。
Can''t-find-method-. = 找不到方法{0}。
Script-objects-are-not-constructors. = 脚本对象不是构造函数。
Java-method-was-invoked-with-as-"this"-value-that-can-not-be-converted-to-Java-type-. = 使用{1}作为无法转换为Java类型{2}的“this”值调用了Java方法“{0}”。
Java-class-has-no-public-instance-field-or-method-named-. = Java类“{0}”没有名为“{1}”的公共实例字段或方法。
Array-index-is-out-of-bounds-[0..]. = 数组索引{0}超出界限[0..{1}]。
Java-arrays-have-no-public-instance-fields-or-methods-named-. = Java数组没有名为“{0}”的公共实例字段或方法。
Java-package-names-may-not-be-numbers. = Java包名不能是数字。
Access-to-Java-class-is-prohibited. = 禁止访问Java类“{0}”。
Ambiguous-import~-and-and-. = 不明确的导入~“{0}”和“{1}”。
Function-importPackage-must-be-called-with-a-package;-had-instead. = 函数importPackage必须用包调用；而是有“{0}”。
Function-importClass-must-be-called-with-a-class;-had-instead. = 函数importClass必须用类调用；而是有“{0}”。
-is-neither-a-class-nor-a-package. = “{0}”既不是类，也不是包。
Cannot-import-since-a-property-by-that-name-is-already-defined. = 无法导入“{0}”，因为已经定义了同名属性。
JavaAdapter-requires-at-least-one-argument. = JavaAdapter至少需要一个参数。
Argument-is-not-Java-class~. = 参数{0}不是Java类~{1}。
Only-one-class-may-be-extended-by-a-JavaAdapter.-Had-and-. = JavaAdapter只能扩展一个类。有{0}和{1}。
Inappropriate-array-length. = 数组长度不合适。
Array-length-exceeds-supported-capacity-limit. = 数组长度{0}超过了支持的容量限制。
Reduce-of-empty-array-with-no-initial-value = 没有初始值的空数组的减少
Malformed-URI-sequence. = 畸形的URI序列。
Precision-out-of-range. = 精度{0}超出范围。
Attempt-to-send-value-to-newborn-generator = 尝试向新生发电机发送值
Already-executing-generator = 已经在执行生成器
StopIteration-may-not-be-changed-to-an-arbitrary-object. = 停止迭代不能更改为任意对象。
The-generator-is-still-executing-from-a-previous-invocation. = 生成器仍在执行以前的调用。
Yield-from-closing-generator = 关闭发电机的产量
.prototype.-method-called-on-null-or-undefined = {0}.prototype.{1}方法在null或未定义时调用
First-argument-to-.prototype.-must-not-be-a-regular-expression = {0}原型的第一个参数。{1}不能是正则表达式
arrow-function-can-not-become-generator = 箭头函数不能成为生成器
Cannot-access-property-of-the-arguments-object-in-strict-mode. = 无法在严格模式下访问参数对象的“{0}”属性。
Cyclic-prototype-value-not-allowed. = 不允许循环原型“{0}”值。
Object-does-not-support-Symbol-keys = 对象{0}不支持符号键
Symbol-objects-may-not-be-assigned-properties-in-strict-mode = 在严格模式下，不能为符号对象分配属性
The-object-is-not-a-string = 该对象不是字符串
The-object-is-not-a-number = 对象不是一个数字
Symbol-objects-may-not-be-constructed-using-"new" = 符号对象不能用“新”来构造
Symbol-objects-may-not-be-compared = 符号对象不能比较
-objects-may-not-be-constructed-using-"new" = {0}对象不能使用“new”构造
Map-function-is-not-actually-a-function = 映射函数实际上不是函数


status = 状态
cmd = 指令
output = 输出
scripts = js脚本
annotation = 注释
production = 生产
turret = 炮塔
units = 单位
distribution = 运输
liquid = 液体
defense = 防御
crafting = 工厂
effect = 影响
logic = 逻辑
power = 能量
other = 其它
displayName = 显示名称
version = 版本
author = 作者
description = 描述
main = 主
minGameVersion = 最小游戏版本
amount = 数量
mod.add = 新建工程
mod.fileName = 工程名
mod.create = 创建工程
mod.advise = [red]请不要导入非本[orange]mod[red]制作的[orange]mod[]
mod.editor = 编辑器

item = 物品
liquid = 液体
block = 方块
unittype = 单位
units = 单位
type = 类型
userdefined = 自定义
fileName = 文件名
nofilename = 文件名不能为[accent]空

content.info = 点击可以编辑，按住可以删除
content.add = 添加

editor.content = 数据库
editor.version = 版本：
editor.preinstall = 预设：
editor.sourceCode = 源码：

confirm.remove = [orange]{0}[]将被删除。

content.flammability = 可燃性
content.radioactivity = 放射性
content.localizedName = 正式名称
content.delegee = delegee
content.hardness = 硬度
content.name = 名称
content.description = 描述
content.alwaysUnlocked = 总是解锁
content.explosiveness = 爆炸性
content.cost = 费用
content.alwaysReplace = 总是替换
content.drawLiquidLight = 渲染液体光
content.solid = 固体
content.researchCostMultiplier = 研究成本乘数
content.unloadable = 不可卸载
content.buildCostMultiplier = 制造成本乘数
content.size = 大小
content.baseExplosiveness = 基础爆炸性
content.breakable = 可拆除
content.outputsLiquid = 输出液体
content.destructible = 可摧毁
content.outputsPower = 输出能量
content.breakSound = 拆除音效
content.placeableOn = 可放置在
content.consumesPower = 消耗能量
content.quickRotate = 快速旋转
content.insulated = 绝缘的
content.canOverdrive = 可被超速
content.rebuildable = 可重建
content.saveData = 保存数据
content.absorbLasers = 吸收激光
content.outputFacing = 面向输出
content.update = 更新
content.expanded = 扩大
content.solidifes = 固化
content.configurable = 可配置
content.drawDisabled = 禁用渲染
content.activeSound = 活动声效
content.hasPower = 有能量
content.autoResetEnabled = 启用自动复位
content.saveConfig = 保存配置
content.outputsPayload = 输出有效负载
content.unitCapModifier = 单位上限修饰符
content.inEditor = 编辑中
content.health = 血量
content.targetable = 可瞄准
content.rotate = 旋转
content.itemCapacity = 物品容量
content.activeSoundVolume = 活动音量
content.idleSoundVolume = 空闲音量
content.emitLight = 发光
content.offset = 偏转
content.floating = 浮动的
content.placeableLiquid = 可放置在液体上
content.idleSound = 空闲音效
content.timerDump = 计时器转储
content.liquidCapacity = 液体容量
content.lightningSound = 闪电音效
content.deflectSound = 偏转音效
content.lightningChance = 闪电概率
content.variants = 变体
content.deflect = 偏转
content.flashHit = 闪击
content.lightningDamage = 闪电伤害
content.lightningLength = 闪电长度
content.chanceDeflect = 转移概率
content.heatCapacity = 热容
content.temperature = 温度
content.viscosity = 粘性
content.color = 颜色
